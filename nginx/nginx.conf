#load_module /usr/local/nginx/modules/ngx_rtmp_module.so;
load_module /ngx_rtmp_module.so;

worker_processes auto;

rtmp_auto_push on;

events {}

# RTMP configuration
rtmp {
    server {
        listen  1935; # Listen on standard RTMP port
        chunk_size  4000;

        application vod {
            #play    /opt/video/vod;
            play    /mount/vod;
        }

        application live {
            live    on;

            # Once receive stream, transcode for adaptive streaming
            # This single ffmpeg command takes the input and transforms
            # the sources into 4 different streams with different bitrate
            # and quality. P.S. The scaling done here respects the aspect
            # ratio of the input.
            
            exec ffmpeg -i rtmp://localhost:1935/live/$name -async 1 -vsync -1
            -c:v libx264 -c:a libfdk_aac -b:v 256k -b:a 32k -vf "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/$name_low
            -c:v libx264 -c:a libfdk_aac -b:v 768k -b:a 96k -vf "scale=720:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/$name_mid
            -c:v libx264 -c:a libfdk_aac -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost:1935/show/$name_hd720
            -c copy -f flv rtmp://localhost:1935/show/stream;

            # disable consuming the stream from nginx as rtmp
            #deny play all;
        }

        application show {
            live on;
            # Turn on HLS
            hls on;
            hls_path    /mount/hls/;
            hls_fragment    3;
            hls_playlist_length 60;

            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _low BANDWIDTH=288000;
            hls_variant _mid BANDWIDTH=448000;
            hls_variant _hd720 BANDWIDTH=2048000;

        }
	
	 access_log  /var/log/nginx/access_log;
    }
}

http {
    server {
        listen  80;
        root    /usr/local/nginx/html;
        index   index.html;

        access_log  /var/log/nginx/access_log;
        error_log   /var/log/nginx/error_log;
        
        location /hls {
            root    /mount;

            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml    mpd;
                application/vnd.apple.mpegurl   m3u8;
                video/mp2t  ts;
            }
        }

        location /stat {
            rtmp_stat   all;
            rtmp_stat_stylesheet    stat.xsl;
        }

        location /stat.xsl {
            root    /usr/local/nginx/html; 
        }
    }
}
